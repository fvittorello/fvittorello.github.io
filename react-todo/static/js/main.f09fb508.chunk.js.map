{"version":3,"sources":["components/example-02/Form/Form.jsx","components/example-02/Todo/Todo.jsx","components/example-02/TodoList/TodoList.jsx","components/example-02/App/App.jsx","serviceWorker.js","index.js"],"names":["Form","setInputText","todos","setTodos","inputText","setStatus","className","value","onChange","e","target","type","onClick","preventDefault","text","completed","id","Math","random","toFixed","name","Todo","todo","map","item","filter","el","TodoList","filteredTodos","key","App","useState","status","setFilteredTodos","useEffect","getlocalTodos","filterHandler","localStorage","setItem","JSON","stringify","saveTolocal","getItem","todoLocal","parse","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","document","getElementById","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","get","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.f09fb508.chunk.js","sourcesContent":["import React from 'react';\n\nexport const Form = ({ setInputText, todos, setTodos, inputText, setStatus }) => {\n\tconst inputTextHandler = (e) => {\n\t\tsetInputText(e.target.value);\n\t};\n\n\tconst submitTodoHandler = (e) => {\n\t\te.preventDefault();\n\t\tsetTodos([...todos, { text: inputText, completed: false, id: (Math.random() * 1000).toFixed(2) }]);\n\t\tsetInputText('');\n\t};\n\n\tconst statusHandler = (e) => {\n\t\tsetStatus(e.target.value);\n\t};\n\n\treturn (\n\t\t<form>\n\t\t\t<div className='input-container'>\n\t\t\t\t<input value={inputText} onChange={inputTextHandler} type='text' className='todo-input' />\n\t\t\t\t<button onClick={submitTodoHandler} type='submit' className='todo-button'>\n\t\t\t\t\t<i className='fas fa-plus-square'></i>\n\t\t\t\t</button>\n\t\t\t</div>\n\t\t\t<div className='select'>\n\t\t\t\t<select onChange={statusHandler} name='todos' className='filter-todo'>\n\t\t\t\t\t<option value='all'>All</option>\n\t\t\t\t\t<option value='completed'>Completed</option>\n\t\t\t\t\t<option value='uncompleted'>Uncompleted</option>\n\t\t\t\t</select>\n\t\t\t</div>\n\t\t</form>\n\t);\n};\n","import React from 'react';\n\nexport const Todo = ({ text, todo, todos, setTodos }) => {\n\t//  Events\n\tconst deleteHandler = () => {\n\t\tsetTodos(todos.filter((el) => el.id !== todo.id));\n\t};\n\n\tconst completeHandler = () => {\n\t\tsetTodos(\n\t\t\ttodos.map((item) => {\n\t\t\t\tif (item.id === todo.id) {\n\t\t\t\t\treturn {\n\t\t\t\t\t\t...item,\n\t\t\t\t\t\tcompleted: !item.completed,\n\t\t\t\t\t};\n\t\t\t\t}\n\n\t\t\t\treturn item;\n\t\t\t})\n\t\t);\n\t};\n\n\treturn (\n\t\t<div className='todo'>\n\t\t\t<li className={`todo-item ${todo.completed ? 'completed' : ''}`}>{text}</li>\n\t\t\t<button onClick={completeHandler} className='complete-btn'>\n\t\t\t\t<i className='fas fa-check'></i>\n\t\t\t</button>\n\t\t\t<button onClick={deleteHandler} className='trash-btn'>\n\t\t\t\t<i className='fas fa-trash'></i>\n\t\t\t</button>\n\t\t</div>\n\t);\n};\n","import React from 'react';\n//  Import Components\nimport { Todo } from 'components/example-02/Todo/Todo';\n\nexport const TodoList = ({ todos, setTodos, filteredTodos }) => {\n\treturn (\n\t\t<div className='todo-container'>\n\t\t\t<ul className='todo-list'>\n\t\t\t\t{filteredTodos.map((todo) => (\n\t\t\t\t\t<Todo key={todo.id} text={todo.text} setTodos={setTodos} todos={todos} todo={todo} />\n\t\t\t\t))}\n\t\t\t</ul>\n\t\t</div>\n\t);\n};\n","import React, { useState, useEffect } from 'react';\nimport './App.css';\n\n//\tImporting Components\nimport { Form } from 'components/example-02/Form/Form';\nimport { TodoList } from 'components/example-02/TodoList/TodoList';\n\n//\tFunctions\nconst filterHandler = (status, todos, setFilteredTodos) => {\n\tswitch (status) {\n\t\tcase 'completed':\n\t\t\tsetFilteredTodos(todos.filter((todo) => todo.completed === true));\n\t\t\tbreak;\n\n\t\tcase 'uncompleted':\n\t\t\tsetFilteredTodos(todos.filter((todo) => todo.completed === false));\n\t\t\tbreak;\n\n\t\tdefault:\n\t\t\tsetFilteredTodos(todos);\n\t\t\tbreak;\n\t}\n};\n\nconst saveTolocal = (todos) => {\n\tlocalStorage.setItem('todos', JSON.stringify(todos));\n};\n\nconst App = () => {\n\t//States\n\tconst [inputText, setInputText] = useState('');\n\tconst [todos, setTodos] = useState([]);\n\tconst [status, setStatus] = useState('all');\n\tconst [filteredTodos, setFilteredTodos] = useState([]);\n\n\t//Use Effect only once\n\tuseEffect(() => {\n\t\tgetlocalTodos();\n\t}, []);\n\n\t//Use Effect\n\tuseEffect(() => {\n\t\tfilterHandler(status, todos, setFilteredTodos);\n\t\tsaveTolocal(todos);\n\t}, [todos, status]);\n\n\tconst getlocalTodos = () => {\n\t\tif (localStorage.getItem('todos') === null) {\n\t\t\tlocalStorage.setItem('todos', JSON.stringify([]));\n\t\t} else {\n\t\t\tlet todoLocal = JSON.parse(localStorage.getItem('todos'));\n\t\t\tsetTodos(todoLocal);\n\t\t}\n\t};\n\n\treturn (\n\t\t<div className='App'>\n\t\t\t<header>\n\t\t\t\t<h1>Todo List</h1>\n\t\t\t</header>\n\t\t\t<Form inputText={inputText} todos={todos} setTodos={setTodos} setInputText={setInputText} setStatus={setStatus} />\n\t\t\t<TodoList setTodos={setTodos} todos={todos} filteredTodos={filteredTodos} />\n\t\t</div>\n\t);\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n\twindow.location.hostname === 'localhost' ||\n\t\t// [::1] is the IPv6 localhost address.\n\t\twindow.location.hostname === '[::1]' ||\n\t\t// 127.0.0.0/8 are considered localhost for IPv4.\n\t\twindow.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n\tif (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n\t\t// The URL constructor is available in all browsers that support SW.\n\t\tconst publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n\t\tif (publicUrl.origin !== window.location.origin) {\n\t\t\t// Our service worker won't work if PUBLIC_URL is on a different origin\n\t\t\t// from what our page is served on. This might happen if a CDN is used to\n\t\t\t// serve assets; see https://github.com/facebook/create-react-app/issues/2374\n\t\t\treturn;\n\t\t}\n\n\t\twindow.addEventListener('load', () => {\n\t\t\tconst swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n\t\t\tif (isLocalhost) {\n\t\t\t\t// This is running on localhost. Let's check if a service worker still exists or not.\n\t\t\t\tcheckValidServiceWorker(swUrl, config);\n\n\t\t\t\t// Add some additional logging to localhost, pointing developers to the\n\t\t\t\t// service worker/PWA documentation.\n\t\t\t\tnavigator.serviceWorker.ready.then(() => {\n\t\t\t\t\tconsole.log(\n\t\t\t\t\t\t'This web app is being served cache-first by a service ' +\n\t\t\t\t\t\t\t'worker. To learn more, visit https://bit.ly/CRA-PWA'\n\t\t\t\t\t);\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t// Is not localhost. Just register service worker\n\t\t\t\tregisterValidSW(swUrl, config);\n\t\t\t}\n\t\t});\n\t}\n}\n\nfunction registerValidSW(swUrl, config) {\n\tnavigator.serviceWorker\n\t\t.register(swUrl)\n\t\t.then((registration) => {\n\t\t\tregistration.onupdatefound = () => {\n\t\t\t\tconst installingWorker = registration.installing;\n\t\t\t\tif (installingWorker == null) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tinstallingWorker.onstatechange = () => {\n\t\t\t\t\tif (installingWorker.state === 'installed') {\n\t\t\t\t\t\tif (navigator.serviceWorker.controller) {\n\t\t\t\t\t\t\t// At this point, the updated precached content has been fetched,\n\t\t\t\t\t\t\t// but the previous service worker will still serve the older\n\t\t\t\t\t\t\t// content until all client tabs are closed.\n\t\t\t\t\t\t\tconsole.log(\n\t\t\t\t\t\t\t\t'New content is available and will be used when all ' +\n\t\t\t\t\t\t\t\t\t'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\t// Execute callback\n\t\t\t\t\t\t\tif (config && config.onUpdate) {\n\t\t\t\t\t\t\t\tconfig.onUpdate(registration);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// At this point, everything has been precached.\n\t\t\t\t\t\t\t// It's the perfect time to display a\n\t\t\t\t\t\t\t// \"Content is cached for offline use.\" message.\n\t\t\t\t\t\t\tconsole.log('Content is cached for offline use.');\n\n\t\t\t\t\t\t\t// Execute callback\n\t\t\t\t\t\t\tif (config && config.onSuccess) {\n\t\t\t\t\t\t\t\tconfig.onSuccess(registration);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t};\n\t\t})\n\t\t.catch((error) => {\n\t\t\tconsole.error('Error during service worker registration:', error);\n\t\t});\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n\t// Check if the service worker can be found. If it can't reload the page.\n\tfetch(swUrl, {\n\t\theaders: { 'Service-Worker': 'script' },\n\t})\n\t\t.then((response) => {\n\t\t\t// Ensure service worker exists, and that we really are getting a JS file.\n\t\t\tconst contentType = response.headers.get('content-type');\n\t\t\tif (response.status === 404 || (contentType != null && contentType.indexOf('javascript') === -1)) {\n\t\t\t\t// No service worker found. Probably a different app. Reload the page.\n\t\t\t\tnavigator.serviceWorker.ready.then((registration) => {\n\t\t\t\t\tregistration.unregister().then(() => {\n\t\t\t\t\t\twindow.location.reload();\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t// Service worker found. Proceed as normal.\n\t\t\t\tregisterValidSW(swUrl, config);\n\t\t\t}\n\t\t})\n\t\t.catch(() => {\n\t\t\tconsole.log('No internet connection found. App is running in offline mode.');\n\t\t});\n}\n\nexport function unregister() {\n\tif ('serviceWorker' in navigator) {\n\t\tnavigator.serviceWorker.ready\n\t\t\t.then((registration) => {\n\t\t\t\tregistration.unregister();\n\t\t\t})\n\t\t\t.catch((error) => {\n\t\t\t\tconsole.error(error.message);\n\t\t\t});\n\t}\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n// import App from 'components/example-01/App/App';\nimport App from 'components/example-02/App/App';\n// import App from 'components/example-03/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}